@model FUNewsManagementSystem.Models.NewsArticle

@{
    ViewData["Title"] = "Delete News Article";
}

<h1 class="text-danger"><i class="fas fa-trash-alt"></i> Delete News Article</h1>

@if (ViewData["SuccessMessage"] != null)
{
    <div class="alert alert-success">
        <i class="fas fa-check-circle"></i> @ViewData["SuccessMessage"]
    </div>

    <script>
        setTimeout(function () {
            window.location.href = '@Url.Action("Index", "NewsArticles")';
        }, 1000);
    </script>
}

@if (ViewData["ErrorMessage"] != null)
{
    <div class="alert alert-danger">
        <i class="fas fa-exclamation-circle"></i> @ViewData["ErrorMessage"]
    </div>
}

<h3 class="mt-3">Are you sure you want to delete this article?</h3>

<div class="card shadow-sm mt-4">
    <div class="card-body">
        <h4 class="card-title">Article Details</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.NewsTitle)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.NewsTitle)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Headline)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.Headline)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.CreatedDate)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.CreatedDate)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.NewsContent)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.NewsContent)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.NewsSource)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.NewsSource)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.NewsStatus)</dt>
            <dd class="col-sm-9">
                <span class="badge @(Model.NewsStatus == true ? "bg-success" : "bg-danger")">
                    @(Model.NewsStatus == true ? "Active" : "Inactive")
                </span>
            </dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.UpdatedById)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.UpdatedById)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.ModifiedDate)</dt>
            <dd class="col-sm-9">@Html.DisplayFor(model => model.ModifiedDate)</dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.Category)</dt>
            <dd class="col-sm-9">
                @(Model.Category != null ? Model.Category.CategoryName : "None")
            </dd>

            <dt class="col-sm-3">@Html.DisplayNameFor(model => model.CreatedBy)</dt>
            <dd class="col-sm-9">
                @(Model.CreatedBy != null ? Model.CreatedBy.AccountName : "Unknown")
            </dd>
        </dl>

        <form asp-action="Delete" onsubmit="return confirmDelete()">
            <input type="hidden" asp-for="NewsArticleId" />
            <div class="d-flex gap-3 mt-4">
                <button type="submit" class="btn btn-danger">
                    <i class="fas fa-trash"></i> Delete
                </button>
                <a asp-action="Index" class="btn btn-secondary">
                    <i class="fas fa-arrow-left"></i> Back to List
                </a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete() {
            return confirm("Are you sure you want to delete this news article? This action cannot be undone.");
        }
    </script>
}
